version: "3"

services:
  auth-db:
    container_name: auth_db
    image: postgres:16.2
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql/data
    ports:
      - "${DB_PORT_EXT:-5432}:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-1234567}
      - POSTGRES_DB=${DB_NAME:-authdb}

  cloudinary-service:
    container_name: cloudinary_service
    build:
      context: ./claudinary-image-service
      dockerfile: Dockerfile
    ports:
      - "${CLOUDINARY_PORT_EXT:-8080}:8080"
    restart: always
    environment:
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-guest}

  api-gateway:
    container_name: api_gateway
    build:
      context: ./api-gateway
      dockerfile: dockerfile.prod
    restart: always
    ports:
      - "${API_GATEWAY_PORT_EXT:-80}:80"
    environment:
      - PORT=${API_GATEWAY_PORT_EXT:-80}
      - BROKER_HOSTS=${BROKER_HOSTS:-amqp://rabbitmq:5672}
    depends_on:
      - rabbitmq

  auth-ms:
    container_name: auth_ms_prod
    build:
      context: ./auth-ms
      dockerfile: dockerfile.prod
    restart: always
    depends_on:
      - rabbitmq
      - auth-db
      - cloudinary-service
    environment:
      - DB_HOST=auth-db
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-1234567}
      - DB_NAME=${DB_NAME:-authdb}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-1h}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - UPLOAD_IMAGE_SERVICE_URL=http://cloudinary-service:8080
      - BROKER_HOSTS=${BROKER_HOSTS:-amqp://rabbitmq:5672}

  record-service:
    container_name: record_ms
    build:
      context: ./Service-Record
      dockerfile: dockerfile.prod
    restart: always
    depends_on:
      - rabbitmq
      - auth-db
    environment:
      - DB_NAME=${DB_NAME:-authdb}
      - DB_PORT=5432
      - DB_HOST=auth-db
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-1234567}
      - BROKER_HOSTS=${BROKER_HOSTS:-amqp://rabbitmq:5672}

  exercise-service:
    container_name: exercise_ms
    build:
      context: ./Service-Exercise
      dockerfile: dockerfile.prod
    restart: always
    depends_on:
      - rabbitmq
      - auth-db
      - cloudinary-service
    environment:
      - DB_NAME=${DB_NAME:-authdb}
      - DB_PORT=5432
      - DB_HOST=auth-db
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-1234567}
      - BROKER_HOSTS=${BROKER_HOSTS:-amqp://rabbitmq:5672}
      - UPLOAD_FILES_SERVICE_URL=http://cloudinary-service:8080

  preference-service:
    container_name: preference_ms
    build:
      context: ./Service-Preference
      dockerfile: dockerfile.prod
    restart: always
    depends_on:
      - rabbitmq
      - auth-db
    environment:
      - DB_NAME=${DB_NAME:-authdb}
      - DB_PORT=5432
      - DB_HOST=auth-db
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-1234567}
      - BROKER_HOSTS=${BROKER_HOSTS:-amqp://rabbitmq:5672}
  voice-evaluator-service:
    container_name: voice_evaluator_service
    build:
      context: ./voice-evaluator-service
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./voice-evaluator-service/app:/app/app
    ports:
      - "${VOICE_PORT_EXT:-5000}:5000"
    environment:
      - PORT=${VOICE_PORT_EXT:-5000}

  comparar-imagen-service:
    container_name: comparar_imagen_service
    build:
      context: ./AC_Comparar_Imagen
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5001:5001"
